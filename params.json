{
  "name": "Acelta",
  "tagline": "RuneScape emulation rethought",
  "body": "[![Build Status](https://travis-ci.org/Jire/Acelta.svg?branch=master)](https://travis-ci.org/Jire/Acelta)\r\n[![Kotlin](https://img.shields.io/badge/kotlin-1.0.2-blue.svg)](http://kotlinlang.org)\r\n[![license](https://img.shields.io/badge/license-GPL%203.0-yellowgreen.svg)](https://github.com/Jire/Acelta/blob/master/LICENSE)\r\n\r\n# Acelta\r\nRuneScape emulation rethought; Acelta reimagines with elegant, highly-performant solutions.\r\n\r\n---\r\n\r\n#### Zero-garbage packet receiving\r\nAcelta receives packets in a straightforward, no-overhead dispatch system for which it is trivial to both listen and\r\ndefine incoming packets.\r\n\r\nA zero-garbage, lock-free inter-thread messaging queue is used to link Netty's networking\r\nthreads with the game thread. `PacketConductor` eliminates the necessity for individual pipeline handlers for different\r\ngame states.\r\n\r\n#### Zero-garbage packet sending\r\nAcelta uses simplistic extension-function definitions to define outgoing packets. This system works in concert with\r\nthe \"one buffer per session\" approach to minimize write overhead.\r\n\r\nBecause of this approach, no Netty encoder is needed. Packet queueing is completely avoided for both incoming and\r\noutgoing packets in favor of spare flushing.\r\n\r\n#### Single game thread\r\nUsing a single game thread allows you to use simplistic, overhead-free techniques and libraries for game logic\r\nif you so desire.\r\n\r\n---\r\n\r\n### Credits\r\n\r\n**Sino**, **thing1**, **Colby**, **Jonatino**, **Wizard Jesse**, **Flammable**, and **Velocity** - for chat, banter,\r\nand remarks about the way of design, and consultancy during the development process.\r\n\r\n**Graham Edgecombe** - for his previous work on frameworks like Hyperion, Apollo, and ScapeEmulator which significantly\r\nimpacted and redefined the ways RuneScape emulators are written.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}